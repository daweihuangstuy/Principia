Principia
Chester Huang
Dawei Huang
pd 5

Physics Interpreter and Visualizer

 ______   ______   __   __   __       ______   _______	 
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================



Obstacles Overcome
The two biggest challenges for this project were implementing the various types of physics problems and creating
the visualizations for those problems. The main issue was breadth of the field of physics and the complexity that
certain topics can get to. As a result, we chose to implement more simple types of problems but from a variety of
topics. This variety required some sort of sorting mechanism, which we achieved through a directory tree with 
top-level main topics and various sub-topics underneath. As for the visualizations, we chose to only do ones that 
were practical and relatively easy to do, while still managing to demonstrate a meaningful topic.

Unresolved Issues
There are no major issues with the project but it can be heavily improved upon in terms of number of topics covered, 
the number of visualizations, and the quality of the interface. One thing that our group did was separate our 
project into a java program to be run on a terminal and a processing sketch to be run with the visual interface. 
This can be improved upon by combining the two to create an integrated and more aestheic experience for the user.

Cool Stuff Learned
We learned quite a lot from working in Processing, mainly the great value of using a mathematical approach to 
take advantage of the available coordinate system.
For our tree structure, we used java reflection in order to easily take user inputs to call the appropriate 
methods for solving a problem, avoiding heavy usage of conditional statements.
We learned some basic read and write operations to save data and reuse it during the visualizations.

Mid-development Design Changes
At the beginning of the project, we established some basic classes for defining Vectors and Units as a basis 
for our physics calculatations. However, this turned out to overcomplicate many problems, making it more 
difficult to interpret user input. We changed this to a more direct approach of taking numeric inputs and directly 
calculating the output. This was possible because the level of complexity of our topics did not require a 
rigorous approach of solving. However, our early work can be useful if this project were to be expanded.

Lessons Learned
Unfortunately, we did not manage our time in the most effective manner. Despite making a plan, we failed to 
really keep up with a pace that we should have had. Part of the issue was not a having a sufficiently clear 
vision of what to do and the other part was not working in the best possible order. There were parts of this 
project that essentially required only time and not much thought, and these should have been completed first. 
The lesson learned here is the necessity of a very clear sense of priorities, knowing the difference bewteen
what has to be done and what would be nice to do.




2017-05-17
--------------------------------------------------------------
Chester, Dawei :: Finalized proposal


2017-05-18
--------------------------------------------------------------
Chester, Dawei :: First draft of plan


2017-05-19
--------------------------------------------------------------
Chester :: Worked on class Vector
  Dawei :: Worked on user interface

2017-05-20
--------------------------------------------------------------
Chester :: Worked on classes Vector, Scalar, Unit


2017-05-22
--------------------------------------------------------------
Chester :: Added reciprocal operation and new constructors
  Dawei :: Devised plan for handling units


2017-05-23
--------------------------------------------------------------
Chester, Dawei :: Created flow chart and UML diagrams; class TopicNode


2017-05-24
--------------------------------------------------------------
Chester :: Implemented TopicTree
  Dawei :: Worked on user interface


2017-05-25
--------------------------------------------------------------
Chester :: Added topics to cover
  Dawei :: Worked on class Motion


2017-05-26
--------------------------------------------------------------
Chester :: Implemented equations
  Dawei :: Started Processing interface


2017-05-29
--------------------------------------------------------------
Chester :: Added to TopicTree; cleaned up code


2017-05-30
--------------------------------------------------------------
Chester :: Worked on equations for motion
  Dawei :: Continued on interface


2017-05-31
--------------------------------------------------------------
Chester :: Added to Solver and Catalog
  Dawei :: Improved interface graphics
  
2017-06-05
--------------------------------------------------------------
Chester :: Worked on back end classes and data structures
  Dawei :: Finalized the interface graphics. Proceed to working on the visualizer

2017-06-06
--------------------------------------------------------------
Chester, Dawei :: Completed driver file and Solver class, finished interface and animations, updated uml and flow
